package cse561;

import java.awt.Dimension;
import java.awt.Point;

import GenCol.entity;
import model.modeling.message;
import view.modeling.ViewableComponent;
import view.modeling.ViewableDigraph;

public class AuthenticationSystem extends ViewableDigraph {

	public AuthenticationSystem(){
		super("Authentication System");
		CoupledModelConstruct();
	}

	public AuthenticationSystem(String name) {
		super(name);
		CoupledModelConstruct();
	}

	private void CoupledModelConstruct() {
		addInport("in_secLvl");
		addInport("in_initId");
		addInport("in_recvId");
		addOutport("out_msg");

		//Instantiate all components required.
		AuthenticationManager am = new AuthenticationManager();
		AuthenticationFactorManager afm = new AuthenticationFactorManager();
		SymmetricEncryption se = new SymmetricEncryption();
		AsymmetricEncryption ae = new AsymmetricEncryption();
		//CertificateAuthority ca = new CertificateAuthority(); 
		//KerberosServer ks = new KerberosServer();
		Transducer t = new Transducer();
	
		//Add them to the model.
		add(am);
		add(afm);
		add(se);
		add(ae);
		//add(ca);
		//add(ks);
		add(t);
		
		addTestInput("start",new entity("20"));
		
		addCoupling(this,"SecurityLevel", am, "SecurityLevel");
		addCoupling(this,"ApplicationName", am, "ApplicationName");
		addCoupling(this,"PayloadSize", am, "PayloadSize");
		addCoupling(this, "in", am, "in");
		addCoupling(am, "out", afm, "in");	
		addCoupling(am, "out", se, "in");
		addCoupling(am, "out", ae, "in");
		//addCoupling(am, "out", ca, "in");
		//addCoupling(am, "out", ks, "in");
		addCoupling(afm, "out", am, "inAFM");
		addCoupling(se,"out", am, "inSymmetric");
		addCoupling(ae,"out", am, "inAsymmetric");
		
		//Tranducers
		addCoupling(am, "out", t, "arriveAM");
		addCoupling(afm, "out", t, "arriveAFM");
		addCoupling(se, "out", t, "arriveSE");
		addCoupling(ae, "out", t, "arriveAE");
		//addCoupling(ca, "out", t, "arriveCA");
	}
	
	public void  Deltext(double e, message x){
		
//		if (messageOnPort(x,"Securitylevel",0)){
//			 entity val = x.getValOnPort("SecurityLevel",0);
//			 holdIn("active",0);
//
//		}
	}


    /**
     * Automatically generated by the SimView program.
     * Do not edit this manually, as such changes will get overwritten.
     */
    public void layoutForSimView()
    {
        preferredSize = new Dimension(945, 612);
        ((ViewableComponent)withName("KS")).setPreferredLocation(new Point(473, 190));
        ((ViewableComponent)withName("CA")).setPreferredLocation(new Point(478, 73));
        ((ViewableComponent)withName("TRANSDUCER")).setPreferredLocation(new Point(522, 335));
        ((ViewableComponent)withName("Symmetric Encryption")).setPreferredLocation(new Point(45, 462));
        ((ViewableComponent)withName("Authentication Manager")).setPreferredLocation(new Point(-4, 46));
        ((ViewableComponent)withName("Asymm Encryption")).setPreferredLocation(new Point(53, 350));
        ((ViewableComponent)withName("Authentication Factor Manager")).setPreferredLocation(new Point(28, 247));
    }
}
